import { Fragment, useState } from "react"
import type { GetStaticProps, NextPage } from "next"
import Head from "next/head"
import groq from "groq"
import sanityClient from "lib/sanity-client"
import { SanityImage } from "sanity-studio"
import s from "styles/Home.module.scss"
import { SanityImageComponent } from "components/sanity-image"

interface Photography {
  _key: string
  title: string
  image: SanityImage
}

interface Data {
  photography: Photography[]
}

interface Props {
  data: Data
}

// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call
const query: string = groq`*[_type == "city"][0]{
  "photography": photography[]
}`

export const getStaticProps: GetStaticProps = async () => {
  const data: Data = await sanityClient.fetch(query)
  return {
    props: { data },
  }
}

const Home: NextPage<Props> = ({ data }: Props) => {
  const [imagesPerPage, setImagesPerPage] = useState(3)

  const handleShowMoreImages = () => {
    setImagesPerPage((prevImagesPerPage) => prevImagesPerPage + 3)
  }

  const { photography } = data
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <link href="https://cdn.sanity.io/" rel="preconnect" crossOrigin="" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={s.container}>
        <div className={s.gallery}>
          {photography.map((photo, idx) => (
            <Fragment key={photo._key}>
              <SanityImageComponent
                image={photo}
                idx={idx}
                imagesPerPage={imagesPerPage}
              />
            </Fragment>
          ))}
        </div>
        {imagesPerPage < photography.length && (
          <button
            onClick={handleShowMoreImages}
            type="button"
            className={`${s.loadMore}`}
          >
            Load more
          </button>
        )}
      </main>
    </div>
  )
}

export default Home
